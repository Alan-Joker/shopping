<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.shopping.dao.GoodsMapper">
  <resultMap id="BaseResultMap" type="com.example.shopping.Entity.Goods">
    <id column="goodsId" jdbcType="INTEGER" property="goodsid" />
    <result column="goodsName" jdbcType="VARCHAR" property="goodsname" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="upTime" jdbcType="TIMESTAMP" property="uptime" />
    <result column="category" jdbcType="INTEGER" property="category" />
    <result column="detailCate" jdbcType="VARCHAR" property="detailcate" />
    <result column="activityId" jdbcType="INTEGER" property="activityid" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.shopping.Entity.Goods">
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Base_Column_List">
    goodsId, goodsName, price, num, upTime, category, detailCate, activityId
  </sql>
  <sql id="Blob_Column_List">
    description
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from goods
    where goodsId = #{goodsid,jdbcType=INTEGER}
  </select>
    <select id="findAll" resultType="com.example.shopping.Entity.Goods">
      select * from goods
    </select>
  <select id="selectByPrimaryKeys" resultType="com.example.shopping.Entity.Goods">
    select * from goods where category= #{goodsid}
  </select>
     <select id="findAllByList" resultType="com.example.shopping.Entity.Goods" parameterType="list">
    select * from goods
    where goodsId in
    <foreach collection="list" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods
    where goodsId = #{goodsid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.shopping.Entity.Goods">
    insert into goods (goodsId, goodsName, price, 
      num, upTime, category, 
      detailCate, activityId, description
      )
    values (#{goodsid,jdbcType=INTEGER}, #{goodsname,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, 
      #{num,jdbcType=INTEGER}, #{uptime,jdbcType=TIMESTAMP}, #{category,jdbcType=INTEGER}, 
      #{detailcate,jdbcType=VARCHAR}, #{activityid,jdbcType=INTEGER}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.shopping.Entity.Goods" useGeneratedKeys="true" keyProperty="goodsid">
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsid != null">
        goodsId,
      </if>
      <if test="goodsname != null">
        goodsName,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="uptime != null">
        upTime,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="detailcate != null">
        detailCate,
      </if>
      <if test="activityid != null">
        activityId,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsid != null">
        #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="goodsname != null">
        #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="uptime != null">
        #{uptime,jdbcType=TIMESTAMP},
      </if>
      <if test="category != null">
        #{category,jdbcType=INTEGER},
      </if>
      <if test="detailcate != null">
        #{detailcate,jdbcType=VARCHAR},
      </if>
      <if test="activityid != null">
        #{activityid,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.shopping.Entity.Goods">
    update goods
    <set>
      <if test="goodsname != null">
        goodsName = #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="uptime != null">
        upTime = #{uptime,jdbcType=TIMESTAMP},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=INTEGER},
      </if>
      <if test="detailcate != null">
        detailCate = #{detailcate,jdbcType=VARCHAR},
      </if>
      <if test="activityid != null">
        activityId = #{activityid,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where goodsId = #{goodsid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.shopping.Entity.Goods">
    update goods
    set goodsName = #{goodsname,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      upTime = #{uptime,jdbcType=TIMESTAMP},
      category = #{category,jdbcType=INTEGER},
      detailCate = #{detailcate,jdbcType=VARCHAR},
      activityId = #{activityid,jdbcType=INTEGER},
      description = #{description,jdbcType=LONGVARCHAR}
    where goodsId = #{goodsid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.shopping.Entity.Goods">
    update goods
    set goodsName = #{goodsname,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      upTime = #{uptime,jdbcType=TIMESTAMP},
      category = #{category,jdbcType=INTEGER},
      detailCate = #{detailcate,jdbcType=VARCHAR},
      activityId = #{activityid,jdbcType=INTEGER}
    where goodsId = #{goodsid,jdbcType=INTEGER}
  </update>
    <update id="updateAid">
      update goods set activityId=#{activityid} where goodsid=#{goodsid}
    </update>
</mapper>