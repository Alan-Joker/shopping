<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.shopping.dao.CommentMapper">
  <resultMap id="BaseResultMap" type="com.example.shopping.Entity.Comment">
    <id column="commentId" jdbcType="INTEGER" property="commentid" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="goodsId" jdbcType="INTEGER" property="goodsid" />
    <result column="point" jdbcType="INTEGER" property="point" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="commentTime" jdbcType="TIMESTAMP" property="commenttime" />
  </resultMap>
  <sql id="Base_Column_List">
    commentId, userId, goodsId, point, content, commentTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment
    where commentId = #{commentid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where commentId = #{commentid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.shopping.Entity.Comment">
    insert into comment (commentId, userId, goodsId, 
      point, content, commentTime
      )
    values (#{commentid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{goodsid,jdbcType=INTEGER}, 
      #{point,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{commenttime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.shopping.Entity.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentid != null">
        commentId,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="goodsid != null">
        goodsId,
      </if>
      <if test="point != null">
        point,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="commenttime != null">
        commentTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentid != null">
        #{commentid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="goodsid != null">
        #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="point != null">
        #{point,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="commenttime != null">
        #{commenttime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.shopping.Entity.Comment">
    update comment
    <set>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="goodsid != null">
        goodsId = #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="point != null">
        point = #{point,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="commenttime != null">
        commentTime = #{commenttime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where commentId = #{commentid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.shopping.Entity.Comment">
    update comment
    set userId = #{userid,jdbcType=INTEGER},
      goodsId = #{goodsid,jdbcType=INTEGER},
      point = #{point,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      commentTime = #{commenttime,jdbcType=TIMESTAMP}
    where commentId = #{commentid,jdbcType=INTEGER}
  </update>
</mapper>